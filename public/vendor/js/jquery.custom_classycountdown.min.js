/*!
 * jQuery ClassyCountdown
 * www.class.pm
 *
 * Written by Marius Stanciu - Sergiu <marius@class.pm>
 * Licensed under the MIT license www.class.pm/LICENSE-MIT
 * Version 1.0.0
 *
 * 
 */
"use strict";
(function (c) {
    c.fn.ClassyCountdown = function (k, r) {
        function l() {
            e = Math.floor(d / 86400);
            f = Math.floor(d % 86400 / 3600);
            g = Math.floor(d % 86400 % 3600 / 60);
            h = Math.floor(d % 86400 % 3600 % 60 % 60)
        }

        let Timer;

        function m(ts) {

            if (new Date(b.end) - (new Date().getTimezoneOffset() * 60 * 1000) < new Date()) {
                a.find(".ClassyCountdown-days input").val(0).trigger("change");
                a.find(".ClassyCountdown-hours input").val(0).trigger("change");
                a.find(".ClassyCountdown-minutes input").val(0).trigger("change");
                a.find(".ClassyCountdown-seconds input").val(0).trigger("change");
                window.clearInterval(Timer);
                return;
            }
            
            a.find(".ClassyCountdown-days input").val(365 - ts.days).trigger("change");
            a.find(".ClassyCountdown-hours input").val(24 - ts.hours).trigger("change");
            a.find(".ClassyCountdown-minutes input").val(60 - ts.minutes).trigger("change");
            a.find(".ClassyCountdown-seconds input").val(60 - ts.seconds).trigger("change");
            a.find(".ClassyCountdown-days .ClassyCountdown-value > div").html(ts.days);
            a.find(".ClassyCountdown-hours .ClassyCountdown-value > div").html(ts.hours);
            a.find(".ClassyCountdown-minutes .ClassyCountdown-value > div").html(ts.minutes);
            a.find(".ClassyCountdown-seconds .ClassyCountdown-value > div").html(ts.seconds)
            if (ts.days > 0) document.title = `${ts.days} : ${ts.hours} : ${ts.minutes} : ${ts.seconds} - Tiny Time`;
            else if(ts.hours > 0) document.title = `${ts.hours} : ${ts.minutes} : ${ts.seconds} - Tiny Time`; 
            else document.title = `${ts.minutes} : ${ts.seconds} - Tiny Time`;
            // console.log([ts.days, ts.hours, ts.minutes, ts.seconds]);
            if ((ts.days + ts.hours + ts.minutes + ts.seconds) == 0) {
                var audio = new Audio('/audio/alarm.mp3');
                audio.play();
                window.clearInterval(Timer);
            }
        }

        function mCounter(ts) {
            a.find(".ClassyCountdown-days input").val(365 - ts.days).trigger("change");
            a.find(".ClassyCountdown-hours input").val(24 - ts.hours).trigger("change");
            a.find(".ClassyCountdown-minutes input").val(60 - ts.minutes).trigger("change");
            a.find(".ClassyCountdown-seconds input").val(60 - ts.seconds).trigger("change");
            a.find(".ClassyCountdown-days .ClassyCountdown-value > div").html(ts.days);
            a.find(".ClassyCountdown-hours .ClassyCountdown-value > div").html(ts.hours);
            a.find(".ClassyCountdown-minutes .ClassyCountdown-value > div").html(ts.minutes);
            a.find(".ClassyCountdown-seconds .ClassyCountdown-value > div").html(ts.seconds)
            if (ts.days > 0) document.title = `${ts.days} : ${ts.hours} : ${ts.minutes} : ${ts.seconds} - Tiny Time`;
            else if(ts.hours > 0) document.title = `${ts.hours} : ${ts.minutes} : ${ts.seconds} - Tiny Time`; 
            else document.title = `${ts.minutes} : ${ts.seconds} - Tiny Time`;
        }

        function p() {
            a.find(".ClassyCountdown-wrapper > div").each(function () {
                c(this).css("height", c(this).width() + "px")
            });
            b.style.textResponsive && a.find(".ClassyCountdown-value").css("font-size", Math.floor(a.find("> div").eq(0).width() * b.style.textResponsive / 10) + "px");
            a.find(".ClassyCountdown-value").each(function () {
                c(this).css("margin-top", Math.floor(0 - parseInt(c(this).height(),10) / 2) + "px")
            });
            a.find(".ClassyCountdown-days input").trigger("change");
            a.find(".ClassyCountdown-hours input").trigger("change");
            a.find(".ClassyCountdown-minutes input").trigger("change");
            a.find(".ClassyCountdown-seconds input").trigger("change")
        }

        function q(a) {
            switch (a) {
                case "flat-colors":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#1abc9c"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#2980b9"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#8e44ad"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#f39c12"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "flat-colors-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#1abc9c"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#2980b9"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#8e44ad"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#f39c12"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "flat-colors-very-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .12,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#1abc9c"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .12,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#2980b9"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .12,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#8e44ad"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .12,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#f39c12"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "flat-colors-black":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#1abc9c",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#2980b9",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#8e44ad",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#f39c12",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "black":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .01,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "black-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "black-very-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .17,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .17,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .17,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .17,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "black-black":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(0,0,0,0.05)",
                                    fgColor: "#222",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#34495e;"
                            }
                        }
                    };
                case "white":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .03,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            }
                        }
                    };
                case "white-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .06,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .06,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .06,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .06,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            }
                        }
                    };
                case "white-very-wide":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .16,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .16,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .16,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .16,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            }
                        }
                    };
                case "white-black":
                    return {
                        labels: !0,
                        style: {
                            element: "",
                            textResponsive: .5,
                            days: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            hours: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            minutes: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            },
                            seconds: {
                                gauge: {
                                    thickness: .25,
                                    bgColor: "rgba(255,255,255,0.05)",
                                    fgColor: "#fff",
                                    lineCap: "round"
                                },
                                textCSS: "font-family:'Open Sans';font-weight:300;color:#fff;"
                            }
                        }
                    }
            }
        }
        var a = c(this),
            e, f, g, h, d, n = !1,
            b = {
                end: void 0,
                now: c.now(),
                labels: !0,
                labelsOptions: {
                    lang: {
                        days: "Days",
                        hours: "Hours",
                        minutes: "Minutes",
                        seconds: "Seconds"
                    },
                    style: "font-size: 0.5em;"
                },
                style: {
                    element: "",
                    labels: !1,
                    textResponsive: .5,
                    days: {
                        gauge: {
                            thickness: .02,
                            bgColor: "rgba(0, 0, 0, 0)",
                            fgColor: "rgba(0, 0, 0, 1)",
                            lineCap: "butt"
                        },
                        textCSS: ""
                    },
                    hours: {
                        gauge: {
                            thickness: .02,
                            bgColor: "rgba(0, 0, 0, 0)",
                            fgColor: "rgba(0, 0, 0, 1)",
                            lineCap: "butt"
                        },
                        textCSS: ""
                    },
                    minutes: {
                        gauge: {
                            thickness: .02,
                            bgColor: "rgba(0, 0, 0, 0)",
                            fgColor: "rgba(0, 0, 0, 1)",
                            lineCap: "butt"
                        },
                        textCSS: ""
                    },
                    seconds: {
                        gauge: {
                            thickness: .02,
                            bgColor: "rgba(0, 0, 0, 0)",
                            fgColor: "rgba(0, 0, 0, 1)",
                            lineCap: "butt"
                        },
                        textCSS: ""
                    }
                },
                onEndCallback: function () {}
            };
        k.theme && (b = c.extend(!0, b, q(k.theme)));
        b = c.extend(!0, b, k);
        (function () {
            a.append('<div class="ClassyCountdown-wrapper"><div class="ClassyCountdown-days"><input type="text" /><span class="ClassyCountdown-value"><div></div><span></span></span></div><div class="ClassyCountdown-hours"><input type="text" /><span class="ClassyCountdown-value"><div></div><span></span></span></div><div class="ClassyCountdown-minutes"><input type="text" /><span class="ClassyCountdown-value"><div></div><span></span></span></div><div class="ClassyCountdown-seconds"><input type="text" /><span class="ClassyCountdown-value"><div></div><span></span></span></div></div>');
            a.find(".ClassyCountdown-days input").knob(c.extend({
                width: "100%",
                displayInput: !1,
                readOnly: !0,
                max: 365
            }, b.style.days.gauge));
            a.find(".ClassyCountdown-hours input").knob(c.extend({
                width: "100%",
                displayInput: !1,
                readOnly: !0,
                max: 24
            }, b.style.hours.gauge));
            a.find(".ClassyCountdown-minutes input").knob(c.extend({
                width: "100%",
                displayInput: !1,
                readOnly: !0,
                max: 60
            }, b.style.minutes.gauge));
            a.find(".ClassyCountdown-seconds input").knob(c.extend({
                width: "100%",
                displayInput: !1,
                readOnly: !0,
                max: 60
            }, b.style.seconds.gauge));
            a.find(".ClassyCountdown-wrapper > div").attr("style", b.style.element);
            a.find(".ClassyCountdown-days .ClassyCountdown-value").attr("style", b.style.days.textCSS);
            a.find(".ClassyCountdown-hours .ClassyCountdown-value").attr("style", b.style.hours.textCSS);
            a.find(".ClassyCountdown-minutes .ClassyCountdown-value").attr("style", b.style.minutes.textCSS);
            a.find(".ClassyCountdown-seconds .ClassyCountdown-value").attr("style", b.style.seconds.textCSS);
            a.find(".ClassyCountdown-value").each(function () {
                c(this).css("margin-top", Math.floor(0 - parseInt(c(this).height(),10) / 2) + "px")
            });
            b.labels && (a.find(".ClassyCountdown-days .ClassyCountdown-value > span").html(b.labelsOptions.lang.days), a.find(".ClassyCountdown-hours .ClassyCountdown-value > span").html(b.labelsOptions.lang.hours), a.find(".ClassyCountdown-minutes .ClassyCountdown-value > span").html(b.labelsOptions.lang.minutes), a.find(".ClassyCountdown-seconds .ClassyCountdown-value > span").html(b.labelsOptions.lang.seconds), a.find(".ClassyCountdown-value > span").attr("style", b.labelsOptions.style));
            d = b.end - b.now;
            l()
        })();
        // m();
        // setInterval(m, 1E3);
        // function timerLoop(){
        //     setInterval(timerLoop, 1000);
        // }
        // timerLoop();
        (function () {
            a.find(".ClassyCountdown-wrapper > div").each(function () {
                c(this).css("height", c(this).width() + "px")
            });
            b.style.textResponsive && (a.find(".ClassyCountdown-value").css("font-size", Math.floor(a.find("> div").eq(0).width() * b.style.textResponsive / 10) + "px"), a.find(".ClassyCountdown-value").each(function () {
                c(this).css("margin-top", Math.floor(0 - parseInt(c(this).height(),10) / 2) + "px")
            }));
            c(window).trigger("resize");
            c(window).resize(c.throttle(50, p))
        })()
        function start(){
            Timer = countdown(
                new Date(b.end) - (new Date().getTimezoneOffset() * 60 * 1000),
                function(ts) {
                    m(ts)
                },
                countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
        }

        let startTime, endTime, ca;
        function counterStart(ca){
            startTime = new Date(ca) - (new Date().getTimezoneOffset() * 60 * 1000);
            const diff = (new Date(b.end) - (new Date().getTimezoneOffset() * 60 * 1000)) - startTime;
            endTime = new Date(b.end) - (new Date().getTimezoneOffset() * 60 * 1000) - diff;
            const originalEndtime = moment(new Date(b.end) - (new Date().getTimezoneOffset() * 60 * 1000)).toString();
            // let stoper = endTime;
            // console.log("diff: "+diff);
            // console.log("endTime: "+new Date(endTime));
            // console.log("Original endTime: "+originalEndtime);
            // // console.log(new Date(endTime.getTime() - startTime.getTime()));
            Timer = countdown(
                endTime,
                function(ts) {
                    // console.log("No "+ moment(1666285160000).toString());
                    const stopper = moment(endTime).add({ days: ts.days, hours: ts.hours, minutes: ts.minutes, seconds: ts.seconds });
                    if (new Date(stopper).getTime() > new Date(originalEndtime).getTime()) {
                        // console.log("Stop Now")
                        var audio = new Audio('/audio/alarm.mp3');
                        audio.play();
                        window.clearInterval(Timer);
                        return;
                    }
                    // console.log("Yes "+ new Date(stopper).getTime());
                    mCounter(ts)
                },
                countdown.DAYS|countdown.HOURS|countdown.MINUTES|countdown.SECONDS);
        }

        var timer = {
            startTimer: function() {
                start();
            },
            startCounter: function(created_at) {
                ca = created_at;
                counterStart(ca);
            }
         };
         return timer;
    }
})(jQuery);